{"version":3,"sources":["Visualizer/Components/AnimationArea/Matrix/Matrix.module.css","Visualizer/Components/AnimationArea/Matrix/Block/Block.module.css","Visualizer/Components/Toolbar/Toolbar.module.css","Visualizer/Visualizer.module.css","assets/images/play.svg","assets/images/pin.svg","Visualizer/Components/Toolbar/Toolbar.js","Visualizer/Components/AnimationArea/Matrix/Block/Block.js","Visualizer/Components/AnimationArea/Matrix/Matrix.js","Visualizer/Components/AnimationArea/AnimationArea.js","Visualizer/Algorithms/BFS.js","Visualizer/Algorithms/DFS.js","Visualizer/Visualizer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","className","styles","toolbar","heading","onClick","this","props","visualizationHandler","resetHandler","resetBoard","name","id","value","algorithm","onChange","onAlgorithmChangeHandler","Component","Block","preventDragHandler","e","preventDefault","text","additional","type","mark","src","play","alt","onDragStart","pin","backgroundColor","block","style","ref","refers","onMouseDown","mouseDownHandler","row","col","onMouseEnter","mouseEnterHandler","onMouseUp","mouseUpHandler","Matrix","area","matrix","map","index1","key","block_type","index2","AnimationArea","startNode","endNode","add_path","parent","start","end","animation","v","push","status","u","algorithms","bfs","queue","no_of_rows","no_of_cols","cells","currentRow","parent_mat","length","nbr","rc","cc","shift","i","r","c","dfs","stack","pop","Visualizer","state","nodes","mouse","moving","algo","componentDidMount","Math","floor","window","innerHeight","innerWidth","currentRow_refers","React","createRef","random","setState","matrix_shallow_copy","new_mat","new_arr","VisualizerHandler","animations","setTimeout","current","background","j","grid","onmouseDownHandler","console","log","onmouseUpHandler","onmouseEnterHandler","target","visualizer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a1610e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"area\":\"Matrix_area__2Qn-M\",\"row\":\"Matrix_row__1WyfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__WfHqi\",\"mark\":\"Block_mark__1GI75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__35nZu\",\"heading\":\"Toolbar_heading__1DH5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visualizer\":\"Visualizer_visualizer__2Gknb\"};","module.exports = __webpack_public_path__ + \"static/media/play.bd511318.svg\";","module.exports = __webpack_public_path__ + \"static/media/pin.bf162891.svg\";","import React, { Component } from \"react\";\n\nimport styles from \"./Toolbar.module.css\";\n\nclass Toolbar extends Component {\n  render() {\n    return (\n      <div className={styles.toolbar}>\n        <h1 className={styles.heading}>Path Finding Visualizer</h1>\n        <button onClick={this.props.visualizationHandler}>Visualize</button>\n        <button onClick={this.props.resetHandler}>Reset</button>\n        <button onClick={this.props.resetBoard}>Reset Board</button>\n        <select\n          name=\"\"\n          id=\"\"\n          value={this.props.algorithm}\n          onChange={this.props.onAlgorithmChangeHandler}\n        >\n          <option value=\"bfs\">Breadth First Search</option>\n          <option value=\"dfs\">Depth First Search</option>\n        </select>\n      </div>\n    );\n  }\n}\nexport default Toolbar;\n","import React, { Component } from \"react\";\nimport styles from \"./Block.module.css\";\n\n// Importing the mark images\nimport play from \"../../../../../assets/images/play.svg\";\nimport pin from \"../../../../../assets/images/pin.svg\";\n\nclass Block extends Component {\n  preventDragHandler = (e) => {\n    e.preventDefault();\n  };\n  render() {\n    let text = \"\";\n    let additional = {};\n    if (this.props.type === 1) {\n      // Start Node\n      text = (\n        <img\n          className={styles.mark}\n          src={play}\n          alt=\"\"\n          onDragStart={this.preventDragHandler}\n        />\n      );\n    } else if (this.props.type === 2) {\n      // End Node\n      text = (\n        <img\n          className={styles.mark}\n          src={pin}\n          alt=\"\"\n          onDragStart={this.preventDragHandler}\n        />\n      );\n    } else if (this.props.type === 3) {\n      // Visited Node\n      text = \"V\";\n    } else if (this.props.type === 4) {\n      // Wall Node\n\n      additional = { backgroundColor: \"#6f6f6f\" };\n    } else if (this.props.type === 5) {\n      // Path Node\n      text = \"P\";\n    }\n    return (\n      <div\n        className={styles.block}\n        style={additional}\n        ref={this.props.refers}\n        onMouseDown={() =>\n          this.props.mouseDownHandler(this.props.row, this.props.col)\n        }\n        onMouseEnter={() =>\n          this.props.mouseEnterHandler(this.props.row, this.props.col)\n        }\n        onMouseUp={() =>\n          this.props.mouseUpHandler(this.props.row, this.props.col)\n        }\n      >\n        {text}\n      </div>\n      // <div className={styles.block} ref={this.props.references}></div>\n    );\n  }\n}\n\nexport default Block;\n","import React, { Component } from \"react\";\nimport styles from \"./Matrix.module.css\";\n\nimport Block from \"./Block/Block\";\n\nclass Matrix extends Component {\n  render() {\n    return (\n      <div className={styles.area}>\n        {this.props.matrix.map((row, index1) => {\n          return (\n            <div className={styles.row} key={index1}>\n              {row.map((block_type, index2) => {\n                // HERE: in the array of array the value stored is the React reference, that will be assigned to respective block element\n                // <Block className={styles.block} key={`${index1}-${index2}`} refereces = {block_reference}/>\n\n                  return <Block\n                    refers = {this.props.refers[index1][index2]}\n                    className={styles.block}\n                    key={`${index1}-${index2}`}\n                    type={block_type}\n                    mouseDownHandler={this.props.mouseDownHandler}\n          mouseUpHandler={this.props.mouseUpHandler}\n          mouseEnterHandler={this.props.mouseEnterHandler}\n                    row = {index1}\n                    col = {index2}\n                  />\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Matrix;\n","import React, { Component } from \"react\";\n\nimport Matrix from \"./Matrix/Matrix\";\n\nclass AnimationArea extends Component {\n  render() {\n    return (\n      <div>\n        <Matrix\n          matrix={this.props.matrix}\n          refers={this.props.refers}\n          startNode={this.props.startNode}\n          endNode={this.props.endNode}\n          mouseDownHandler={this.props.mouseDownHandler}\n          mouseUpHandler={this.props.mouseUpHandler}\n          mouseEnterHandler={this.props.mouseEnterHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AnimationArea;\n","const parent_mat = (no_of_rows, no_of_cols) => {\n  let cells = [];\n  for (let row = 0; row < no_of_rows; row++) {\n    const currentRow = [];\n    for (let col = 0; col < no_of_cols; col++) {\n      // currentRow.push(React.createRef());\n      currentRow.push(0);\n    }\n    cells.push(currentRow);\n  }\n  return cells;\n};\n\nconst add_path = (parent, start, end, animation) => {\n  // initialize the 'v' with end node\n  // in order to retrace/backtrack the path\n  let v = end;\n  // Add the first node of the bcaktrack to animation\n  // with P(path node) status\n  while (true) {\n    animation.push({ ...v, status: \"P\" });\n    // Fetch the parent of v node from parents matrix\n    let u = parent[v[\"r\"]][v[\"c\"]];\n    // If this is the start node\n    if (u[\"r\"] === start[\"r\"] && u[\"c\"] === start[\"c\"]) {\n      animation.push({ ...u, status: \"P\" });\n      return;\n    }\n\n    // assign the node to v\n    v = u;\n  }\n};\n\nconst bfs = (matrix, start, end) => {\n  let animation = [];\n  let queue = [start];\n  let parent = parent_mat(matrix.length, matrix[0].length);\n  // This has the operation to be performed to reach neighboring nodes\n  let nbr = [\n    { rc: 1, cc: 0 },\n    { rc: -1, cc: 0 },\n    { rc: 0, cc: 1 },\n    { rc: 0, cc: -1 },\n  ];\n\n  while (queue.length) {\n    // Extract the first element of the queue\n    let u = queue.shift();\n    for (let i = 0; i < 4; i++) {\n      // r and c will be the cordinates of the new nodes being explored\n      let r = u[\"r\"] + nbr[i][\"rc\"];\n      let c = u[\"c\"] + nbr[i][\"cc\"];\n      if (r >= 0 && r < matrix.length && c >= 0 && c < matrix[0].length) {\n        if (matrix[r][c] === 0) {\n          // If the node is unvisited\n          // Set the node as visited\n          matrix[r][c] = 3;\n          // Push the node in the animation\n          animation.push({ r: r, c: c, status: \"V\" });\n          // Set its parent node to retrace the path\n          parent[r][c] = { r: u[\"r\"], c: u[\"c\"] };\n          // Push it in the queue as per BFS algo\n          queue.push({ r: r, c: c });\n        } else if (matrix[r][c] === 2) {\n          // If this is the end node\n          // Then we first push in the animation array\n          animation.push({ r: r, c: c, status: \"V\" });\n          // Set its parent node to retrace the path\n          parent[r][c] = { r: u[\"r\"], c: u[\"c\"] };\n          // Then sends the control to the add_path function  which\n          // Analyzes the shortest path and adds it to the animation array\n          add_path(parent, start, end, animation);\n          // return the animation array back\n          return animation;\n        }\n      }\n    }\n  }\n};\n\nexport default bfs;\n","const parent_mat = (no_of_rows, no_of_cols) => {\n  let cells = [];\n  for (let row = 0; row < no_of_rows; row++) {\n    const currentRow = [];\n    for (let col = 0; col < no_of_cols; col++) {\n      // currentRow.push(React.createRef());\n      currentRow.push(0);\n    }\n    cells.push(currentRow);\n  }\n  return cells;\n};\n\nconst add_path = (parent, start, end, animation) => {\n  // initialize the 'v' with end node\n  // in order to retrace/backtrack the path\n  let v = end;\n  // Add the first node of the bcaktrack to animation\n  // with P(path node) status\n  while (true) {\n    animation.push({ ...v, status: \"P\" });\n    // Fetch the parent of v node from parents matrix\n    let u = parent[v[\"r\"]][v[\"c\"]];\n    // If this is the start node\n    if (u[\"r\"] === start[\"r\"] && u[\"c\"] === start[\"c\"]) {\n      animation.push({ ...u, status: \"P\" });\n      return;\n    }\n\n    // assign the node to v\n    v = u;\n  }\n};\n\nconst dfs = (matrix, start, end) => {\n  let animation = [];\n  let stack = [start];\n  let parent = parent_mat(matrix.length, matrix[0].length);\n  // This has the operation to be performed to reach neighboring nodes\n  let nbr = [\n    { rc: 1, cc: 0 },\n    { rc: -1, cc: 0 },\n    { rc: 0, cc: 1 },\n    { rc: 0, cc: -1 },\n  ];\n\n  while (stack.length) {\n    // Extract the element from top of stack\n    let u = stack.pop();\n    \n    // Push the node in the animation\n    animation.push({ r: u[\"r\"], c: u[\"c\"], status: \"V\" });\n    for (let i = 0; i < 4; i++) {\n      // r and c will be the cordinates of the new nodes being explored\n      let r = u[\"r\"] + nbr[i][\"rc\"];\n      let c = u[\"c\"] + nbr[i][\"cc\"];\n      if (r >= 0 && r < matrix.length && c >= 0 && c < matrix[0].length) {\n        if (matrix[r][c] === 0) {\n          // If the node is unvisited\n          \n\n          // Set its parent node to retrace the path\n          parent[r][c] = { r: u[\"r\"], c: u[\"c\"] };\n          // Push it in the queue as per BFS algo\n          stack.push({ r: r, c: c });\n          break;\n        } else if (matrix[r][c] === 2) {\n          // If this is the end node\n          // Then we first push in the animation array\n          animation.push({ r: r, c: c, status: \"V\" });\n          // Set its parent node to retrace the path\n          parent[r][c] = { r: u[\"r\"], c: u[\"c\"] };\n          // Then sends the control to the add_path function  which\n          // Analyzes the shortest path and adds it to the animation array\n          add_path(parent, start, end, animation);\n          // return the animation array back\n          return animation;\n        }\n      }\n    }\n  }\n};\n\nexport default dfs;\n","import React, { Component } from \"react\";\n\nimport styles from \"./Visualizer.module.css\";\n\nimport Toolbar from \"./Components/Toolbar/Toolbar\";\nimport AnimationArea from \"./Components/AnimationArea/AnimationArea\";\n\nimport bfs from \"./Algorithms/BFS\";\nimport dfs from \"./Algorithms/DFS\";\n\nconst algorithms = { bfs: bfs, dfs: dfs };\nclass Visualizer extends Component {\n  refers = [];\n  state = {\n    nodes: [],\n    startNode: null,\n    endNode: null,\n    mouse: null,\n    moving: null,\n    algo: \"bfs\",\n  };\n  componentDidMount = () => {\n    const cells = [];\n    const no_of_rows = Math.floor((window.innerHeight * 0.8) / 30);\n    const no_of_cols = Math.floor((window.innerWidth * 0.9) / 30);\n    for (let row = 0; row < no_of_rows; row++) {\n      const currentRow = [];\n      const currentRow_refers = [];\n      for (let col = 0; col < no_of_cols; col++) {\n        // currentRow.push(React.createRef());\n        currentRow.push(0);\n        currentRow_refers.push(React.createRef());\n      }\n      cells.push(currentRow);\n      this.refers.push(currentRow_refers);\n    }\n    let startNode = {\n      r: Math.floor(Math.random() * no_of_rows),\n      c: Math.floor(Math.random() * no_of_cols),\n    };\n    let endNode = {\n      r: Math.floor(Math.random() * no_of_rows),\n      c: Math.floor(Math.random() * no_of_cols),\n    };\n    while (startNode[\"r\"] === endNode[\"r\"] && startNode[\"c\"] === endNode[\"c\"]) {\n      endNode = {\n        r: Math.floor(Math.random() * no_of_rows),\n        c: Math.floor(Math.random() * no_of_cols),\n      };\n    }\n    cells[startNode[\"r\"]][startNode[\"c\"]] = 1;\n    cells[endNode[\"r\"]][endNode[\"c\"]] = 2;\n    // console.log(startNode,endNode)\n\n    this.setState({ nodes: cells, startNode, endNode });\n  };\n  //   HERE: Methods\n  matrix_shallow_copy = (matrix) => {\n    let new_mat = [];\n    for (let i = 0; i < matrix.length; i++) {\n      let new_arr = [...matrix[i]];\n      new_mat.push(new_arr);\n    }\n    return new_mat;\n  };\n  //   HERE: Handlers\n\n  VisualizerHandler = () => {\n    let animations = algorithms[this.state.algo](\n      this.matrix_shallow_copy(this.state.nodes),\n      this.state.startNode,\n      this.state.endNode\n    );\n    for (let i = 0; i < animations.length; i++) {\n      setTimeout(() => {\n        if (animations[i].status === \"V\") {\n          this.refers[animations[i].r][\n            animations[i].c\n          ].current.style.background = \"#d3d3d3\";\n        } else if (animations[i].status === \"P\") {\n          this.refers[animations[i].r][\n            animations[i].c\n          ].current.style.background = \"#2e2e2e\";\n        }\n      }, i * 20);\n    }\n  };\n  resetHandler = () => {\n    for (let i = 0; i < this.refers.length; i++) {\n      for (let j = 0; j < this.refers[0].length; j++) {\n        if (\n          this.state.nodes[i][j] === 0 ||\n          this.state.nodes[i][j] === 1 ||\n          this.state.nodes[i][j] === 2\n        ) {\n          this.refers[i][j].current.style.background = \"None\";\n        }\n      }\n    }\n  };\n  resetBoard = () => {\n    this.resetHandler();\n    let grid = this.matrix_shallow_copy(this.state.nodes);\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (!(grid[i][j] === 1 || grid[i][j] === 2)) {\n          grid[i][j] = 0;\n        }\n      }\n    }\n    this.setState({ nodes: grid });\n  };\n  onmouseDownHandler = (row, col) => {\n    let grid = this.matrix_shallow_copy(this.state.nodes);\n    if (grid[row][col] === 0) {\n      grid[row][col] = 4;\n    } else if (grid[row][col] === 4) {\n      grid[row][col] = 0;\n    } else if (grid[row][col] === 1 || grid[row][col] === 2) {\n      // Moving start Node\n      this.setState({ mouse: 1, moving: [row, col] });\n      return;\n    }\n    this.setState({ mouse: 1, nodes: grid }, () => {\n      console.log(\"Mouse Down\", row, col);\n    });\n  };\n  onmouseUpHandler = (row, col) => {\n    let end = { ...this.state.endNode };\n    let start = { ...this.state.startNode };\n    if (this.state.moving) {\n      if (this.state.nodes[this.state.moving[0]][this.state.moving[1]] === 1) {\n        // startNode\n        start = { r: row, c: col };\n      } else if (\n        this.state.nodes[this.state.moving[0]][this.state.moving[1]] === 2\n      ) {\n        // endNode\n        end = { r: row, c: col };\n      }\n    }\n    this.setState(\n      { mouse: 0, moving: null, startNode: start, endNode: end },\n      () => {\n        console.log(\"Mouse Up\", row, col);\n      }\n    );\n  };\n  onmouseEnterHandler = (row, col) => {\n    if (!this.state.mouse) return;\n    let grid = this.matrix_shallow_copy(this.state.nodes);\n    if (grid[row][col] === 1 || grid[row][col] === 2) return;\n    if (this.state.moving) {\n      grid[row][col] = grid[this.state.moving[0]][this.state.moving[1]];\n      grid[this.state.moving[0]][this.state.moving[1]] = 0;\n      this.setState({ nodes: grid, moving: [row, col] });\n      return;\n    }\n    if (grid[row][col] === 0) {\n      grid[row][col] = 4;\n    } else if (grid[row][col] === 4) {\n      grid[row][col] = 0;\n    }\n    this.setState({ nodes: grid }, () => {\n      console.log(\"Mouse is already down\", row, col);\n    });\n  };\n  onAlgorithmChangeHandler = (e) => {\n    this.setState({ algo: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className={styles.visualizer}>\n        <Toolbar\n          visualizationHandler={this.VisualizerHandler}\n          resetHandler={this.resetHandler}\n          resetBoard={this.resetBoard}\n          algorithm={this.state.algo}\n          onAlgorithmChangeHandler={this.onAlgorithmChangeHandler}\n        />\n        <AnimationArea\n          matrix={this.state.nodes}\n          startNode={this.state.startNode}\n          endNode={this.state.endNode}\n          refers={this.refers}\n          mouseDownHandler={this.onmouseDownHandler}\n          mouseUpHandler={this.onmouseUpHandler}\n          mouseEnterHandler={this.onmouseEnterHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Visualizer;\n","import React from \"react\";\n\nimport Visualizer from \"./Visualizer/Visualizer\"\n\nfunction App() {\n  return (\n    <Visualizer/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}